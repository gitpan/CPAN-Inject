NAME
    CPAN::Inject - Base class for injecting distributions into CPAN sources

SYNOPSIS
      # Create the injector
      my $cpan = CPAN::Inject->new(
          sources => '/root/.cpan/sources',  # Required field
          author  => 'LOCAL',                # The default
          );
  
      # Add a file to the user
      $cpan->add( 'some/random/Perl-Tarball-1.02.tar.gz' );
  
      # What would have have to use when installing
      # $path = 'LOCAL/Perl-Tarball-1.02.tar.gz';
      my $path = $cpan->cpan_path( 'some/random/Perl-Tarball-1.02.tar.gz' );

DESCRIPTION
    Following the release of CPAN::Mini, the CPAN::Mini::Inject module was
    created to add additional distributions into a minicpan mirror.

    While it was created for use with a minicpan mirror, similar
    functionality can be reused in other situations.

    CPAN::Inject replicates the basics of this functionality.

    Specifically, it takes an arbitrary tarball and adds it to the CPAN
    sources directory for a particular author, and then add the new file to
    the CHECKSUMS file.

    It does not reimplement the logic to add files to the indexes.

    The initial use this module was created for was to inject tarballs into
    the CPAN sources directory for the reserved LOCAL user, so that the can
    be installed via the CPAN shell, with automated recursion to CPAN
    dependencies.

    But although the number of functions is limited (current only "add"
    exists, with the others to be added as needed) the implementation is
    very generic and sub-classable, so that it can be reused in other
    situations.

METHODS
  new
      # Create the injector for the default LOCAL author
      $cpan = CPAN::Inject->new(
          sources => '/root/.cpan/sources',
          );
  
      # Create the injector for a specific author
      $cpan = CPAN::Inject->new(
          sources => '/root/.cpan/sources',
          author  => 'ADAMK',
          );

    The "new" constructor takes a set of named params and create a cpan
    injection object.

    * sources - The compulsory "sources" param should be the path to a
    directory that is the root of a mirror (or a partial mirror such as a
    CPAN::Cache or a CPAN::Mini).

    To retain the permissions and ownership integrity of the sources tree,
    you must be the owner of the "sources" directory in order to inject the
    distribution tarballs.

    * author - The optional "author" param should be the CPAN id of an
    author. By default, the reserved local CPAN id "LOCAL" will be used.

    The author provided will be used as a default in all further actions.

    Returns a "CPAN::Inject" object, or throws an exception on error.

  from_cpan_config
    The "from_cpan_config" constructor loads the CPAN.pm configuration file,
    and uses the data contained within to specific the sources path for the
    object.

    This constructor is otherwise the same.

    Returns a CPAN::Inject object on success, or throws an exception on
    error.

  sources
    The "sources" accessor returns the path to the root of the directory
    tree.

  author
    The "author" accessor returns the CPAN id for the default author which
    will be "LOCAL" if you did not provide an alternative param to the the
    "new" constructor.

  add
      # Add a file to the constructor/default author
      $cpan->add( 'any/arbitrary/Perl-Tarball-1.01.tar.gz' );

    The "add" method takes a Perl distribution tarball from an arbitrary
    path, and adds it to the sources path.

    The specific location the tarball is copied to will be in the root
    directory for the author provided to the constructor.

    Returns true, or throws an exception on error.

  author_subpath
      # $path = 'authors/id/L/LO/LOCAL'
      $path = $cpan->author_subpath;

    The "author_subpath" method takes a CPAN author id (or uses the CPAN
    author id originally provided to the constructor) and returns the
    relative subpath for the AUTHOR within the sources tree.

    Returns the subpath as a string.

  author_path
      # $path = '/root/.cpan/sources/authors/id/L/LO/LOCAL'
      $path = $cpan->author_subpath;

    The "author_path" method finds the full path for the root directory for
    the named author.

    Returns the path as a string.

  file_path
      # $path = '/root/.cpan/sources/authors/id/L/LO/LOCAL/Perl-Tarball-1.02.tar.gz'
      $path = $cpan->file_path( 'Perl-Tarball-1.02.tar.gz' );
      $path = $cpan->file_path( '/some/random/place/Perl-Tarball-1.02.tar.gz' );

    The "file_path" method takes the name of a tarball (either just the name
    or a full path) and calculates the location that the file will end up
    at.

    When files are copied into the sources directory, they are always copied
    to the top level of the author root.

    Returns the path as a string.

  install_path
      # $path = 'LOCAL/Perl-Tarball-1.01.tar.gz';
      $path = $cpan->install_path( 'Perl-Tarball-1.01.tar.gz' );
      $path = $cpan->install_path( '/some/random/place/Perl-Tarball-1.02.tar.gz' );

    The "cpan_path" method returns the path for the distribution as the CPAN
    shell understands it.

    Using this path, the CPAN shell can expand it to locate the
    distribution, and then can install it.

    Returns the path as a string.

SUPPORT
    This module is stored in an Open Repository at the following address.

    <http://svn.phase-n.com/svn/cpan/trunk/Module-Inject>

    Write access to the repository is made available automatically to any
    published CPAN author, and to most other volunteers on request.

    If you are able to submit your bug report in the form of new (failing)
    unit tests, or can apply your fix directly instead of submitting a
    patch, you are strongly encouraged to do so as the author currently
    maintains over 100 modules and it can take some time to deal with
    non-Critcal bug reports or patches.

    This will guarentee that your issue will be addressed in the next
    release of the module.

    If you cannot provide a direct test or fix, or don't have time to do so,
    then regular bug reports are still accepted and appreciated via the CPAN
    bug tracker.

    <http://rt.cpan.org/NoAuth/ReportBug.html?Queue=Module-Inject>

    For other issues, for commercial enhancement or support, or to have your
    write access enabled for the repository, contact the author at the email
    address above.

AUTHOR
    Adam Kennedy <adamk@cpan.org>

SEE ALSO
    CPAN::Mini::Inject

COPYRIGHT
    Copyright 2006 Adam Kennedy.

    This program is free software; you can redistribute it and/or modify it
    under the same terms as Perl itself.

    The full text of the license can be found in the LICENSE file included
    with this module.

